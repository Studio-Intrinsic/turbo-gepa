[build-system]
requires = ["setuptools>=77.0.1", "wheel", "build"]
build-backend = "setuptools.build_meta"

[project]
# Do not add spaces around the '=' sign for any of the fields
# preceded by a marker comment as it affects the publish workflow.
#replace_package_name_marker
name="turbo-gepa"
#replace_package_version_marker
version="0.1.0"
description = "High-throughput prompt evolution framework - production fork of GEPA with island-based parallelism, async orchestration, and ASHA successive halving."
readme = "README.md"
authors = [
  { name = "Greg Miller", email = "greg@intrinsic-labs.ai" }
]
license = { text = "MIT" }
requires-python = ">=3.10, <3.14"

# Core runtime deps required for default adapters/imports
dependencies = [
    "litellm>=1.64.0",
]

[project.optional-dependencies]
full = [
    "litellm>=1.64.0",
    "datasets>=2.14.6",
    "mlflow>=3.0.0",
    "wandb",
    "tqdm>=4.66.1",
    "plotext>=5.2.8",
    "dspy-ai",
]
dspy = [
    "dspy-ai",
]
test = [
    "turbo-gepa[full]",
    "pytest"
]
build = [
    "setuptools>=77.0.1",
    "wheel",
    "build",
    "twine",
    "semver",
    "packaging",
    "requests"
]
dev = [
    "turbo-gepa[test]",
    "turbo-gepa[build]",
    "pre-commit",
    "build>=1.0.3",
    "ruff>=0.3.0"
]

[project.urls]
"Homepage" = "https://github.com/Studio-Intrinsic/turbo-gepa"
"Bug Tracker" = "https://github.com/Studio-Intrinsic/turbo-gepa/issues"
"Documentation" = "https://github.com/Studio-Intrinsic/turbo-gepa#readme"
"Original GEPA" = "https://github.com/gepa-ai/gepa"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]

[tool.ruff]
include = ["src/**/*.py"]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "RUF", # ruff-specific rules
    "Q",   # flake8-quotes
]
ignore = [
    "B027",  # Allow non-abstract empty methods in abstract base classes
    "FBT003",# Allow boolean positional values in function calls
    "C901",  # Ignore complexity checking
    "E501",  # Ignore line length errors (handled by formatter)
    "UP035", # Allow python typing modules
    "RUF005", # Allow using + operator to concatenate collections
    "B904", # Allow raise custom exceptions in except blocks
    "F403", # Allow wildcard imports
    "E721", # Allow using == to compare with type
    "UP031", # Allow percent format
    "RUF022", # Allow unsorted __all__ value
    "E731"
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
docstring-code-format = false
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["gepa"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",    # Allow assert statements in tests
    "TID252",  # Allow relative imports in tests
    "ARG001",  # Allow unused arguments in tests (like pytest fixtures)
]
"__init__.py" = ["F401"]  # Init files can be empty
